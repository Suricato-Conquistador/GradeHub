{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricar\\\\OneDrive\\\\Documentos\\\\GitHub\\\\GradeHub\\\\frontend\\\\src\\\\pages\\\\Login.tsx\";\nimport { createRef } from \"react\";\nimport Swal from \"sweetalert2\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport Auth from \"../server/routes/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = new Auth();\nconst Login = () => {\n  const emailRef = /*#__PURE__*/createRef();\n  const passwordRef = /*#__PURE__*/createRef();\n  const signIn = async () => {\n    try {\n      var _emailRef$current, _passwordRef$current;\n      const email = (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value;\n      const password = (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value;\n      if (!email || !password) {\n        return Swal.fire({\n          title: \"Erro\",\n          text: \"Existe um campo não preenchido\",\n          icon: \"warning\"\n        });\n      }\n      const token = await auth.login(email, password);\n      console.log(token.token);\n      sessionStorage.setItem(\"authentication\", token.token);\n      Swal.fire({\n        title: \"Sucesso\",\n        text: `O usuário foi logado`,\n        icon: \"success\"\n      });\n    } catch (error) {\n      console.log(error);\n      Swal.fire({\n        title: \"Erro\",\n        text: `O usuário não foi cadastrado por conta de um erro: ${error}`,\n        icon: \"error\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-lf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-rt\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            labelId: \"email\",\n            labelName: \"Email\",\n            type: \"text\",\n            reference: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            labelId: \"password\",\n            labelName: \"Senha\",\n            type: \"password\",\n            reference: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/admin\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Logar\",\n              onClick: signIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["createRef","Swal","Input","Button","Auth","jsxDEV","_jsxDEV","auth","Login","emailRef","passwordRef","signIn","_emailRef$current","_passwordRef$current","email","current","value","password","fire","title","text","icon","token","login","console","log","sessionStorage","setItem","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","labelId","labelName","type","reference","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ricar/OneDrive/Documentos/GitHub/GradeHub/frontend/src/pages/Login.tsx"],"sourcesContent":["import { createRef } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport Auth from \"../server/routes/auth\";\r\n\r\nconst auth = new Auth()\r\n\r\nconst Login = () => {\r\n    const emailRef = createRef<HTMLInputElement>()\r\n    const passwordRef = createRef<HTMLInputElement>()\r\n\r\n    const signIn = async() => {\r\n        try {\r\n            const email = emailRef.current?.value\r\n            const password = passwordRef.current?.value\r\n\r\n            if(!email || !password) {\r\n                return Swal.fire({\r\n                    title: \"Erro\",\r\n                    text: \"Existe um campo não preenchido\",\r\n                    icon: \"warning\"\r\n                })\r\n            }\r\n\r\n            const token = await auth.login(email, password)\r\n            console.log(token.token)\r\n            sessionStorage.setItem(\"authentication\", token.token)\r\n            Swal.fire({\r\n                title: \"Sucesso\",\r\n                text: `O usuário foi logado`,\r\n                icon: \"success\"\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            Swal.fire({\r\n                title: \"Erro\",\r\n                text: `O usuário não foi cadastrado por conta de um erro: ${error}`,\r\n                icon: \"error\"\r\n              })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"content\">\r\n            <div className=\"p-lf\"></div>\r\n\r\n            <div className=\"p-rt\">\r\n                <div className=\"box\">\r\n                    <h1>LOGIN</h1>\r\n\r\n                    <div>\r\n                        <Input labelId={\"email\"} labelName={\"Email\"} type={\"text\"} reference={emailRef} />\r\n                        <Input labelId={\"password\"} labelName={\"Senha\"} type={\"password\"} reference={passwordRef} />\r\n                        <a href=\"/admin\">\r\n                            <Button title={\"Logar\"} onClick={signIn} />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}